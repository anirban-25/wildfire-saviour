import Head from "next/head";
import Body from "../components/Body";
import Header from "../components/Header";
import SmallCard from "../components/SmallCard";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Loader from "../components/Loader";
export default function Home({ exploreData }) {
  let router = useRouter();
  const [propState, setPropState] = useState(false);
  const [wildfires, setWildfires] = useState({});
  const [data1, setData1] = useState(null);
  const [data2, setData2] = useState(null);
  const [print, setPrint] = useState(false);
  const [text1, setText1] = useState("");
  const [text2, setText2] = useState("");
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    let token = sessionStorage.getItem("Token");
    if (!token) {
      setPropState(false);
    }

    if (token) {
      setPropState(true);
      router.push("/");
    }
  }, []);

  function getData1(val) {
    setPrint(false);
    setText1(val.target.value);
    setData1(val.target.value);
  }

  function getData2(val) {
    setPrint(false);
    setData2(val.target.value);
    setText2(val.target.value);
  }

  function sendProps() {
    if (!text1 || !text2) {
      alert("Longitude or Latitude cannot remain blank");
    } else {
      setLoading(true);
      router.push({
        pathname: "/footerAgain",
        query: { data1, data2 },
      });
    }
  }

  return (
    <div className="">
      <Head>
        <title>wildfire-detector</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header props={propState} />
      <Body />
      <main className="max-w-7xl mx-auto px-8 sm:px-16">
        <section className="pt-6">
          <h4 className="text-2xl font-semibold pb-5">
            Enter your location by Co-ordinates to know if you are safe or not
          </h4>

          <input
            type="number"
            onChange={getData1}
            value={text1}
            className="border-2 mb-3 mr-2 p-2 rounded-md"
            placeholder="longitude"
          />
          <input
            type="number"
            onChange={getData2}
            value={text2}
            className="border-2 mb-3 mr-2 p-2 rounded-md"
            placeholder="latitude"
          />
          <button onClick={() => sendProps()} className="">
            {loading ? (
              <>
                <div className=" bg-white flex justify-center items-center py-2">
                  <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-red-700" />
                </div>
              </>
            ) : (
              <>
                <div className="border-2 p-1 rounded-lg bg-gray-400 text-white hover:scale-105 hover:bg-gray-500 hover:text-gray-100 transition transform duration-200 ease-out">
                  submit
                </div>
              </>
            )}
          </button>
          <div>
          <a
          
            className="hidden xl:flex md:flex md:border-0 md:hover:bg-white md:hover:underline md:ml-[12%] md:mr-[47%] xl:ml-[70%] xl:border-2 xl:hover:bg-gray-200 xl:hover:no-underline xl:mr-[5%] p-2 rounded-2xl sticky left-0 ml-[70%] mr-[5%] text-blue-800 hover:text-blue-900 items-center "
            href="https://www.gps-coordinates.net/gps-coordinates-converter"
            target="_blank"
          >
            click this to find out your co-ordinates through your address
          </a>
          <h1 className="mb-3 text-gray-400">
            please wait for a few seconds after pressing the submit button while
            we fetch the data
          </h1>
          </div>
        </section>
      </main>
          <div className=" bg-white text-black xl:bg-black xl:text-white items-center flex justify-center w-[100%] p-2 mt-[5%]">
              made by DevKings
          </div>
    </div>
  );
}
